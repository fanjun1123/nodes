"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const enquirer_1 = require("enquirer");
const utils = tslib_1.__importStar(require("../utils"));
const path_1 = tslib_1.__importDefault(require("path"));
const fs_1 = tslib_1.__importDefault(require("fs"));
const __1 = require("../");
const TYPE_TS = 'typescript';
const TYPE_JS = 'javascript';
const JS_CONFIG = {
    include: ['**/*'],
    exclude: [
        'node_modules/',
        'app/web/',
        'app/view/',
        'public/',
        'app/mocks/',
        'coverage/',
        'logs/',
    ],
};
const TS_CONFIG = {
    compilerOptions: {
        target: 'es2017',
        module: 'commonjs',
        strict: true,
        noImplicitAny: false,
        experimentalDecorators: true,
        emitDecoratorMetadata: true,
        allowSyntheticDefaultImports: true,
        charset: 'utf8',
        allowJs: false,
        pretty: true,
        lib: ['es6'],
        noEmitOnError: false,
        noUnusedLocals: true,
        noUnusedParameters: true,
        allowUnreachableCode: false,
        allowUnusedLabels: false,
        strictPropertyInitialization: false,
        noFallthroughCasesInSwitch: true,
        skipLibCheck: true,
        skipDefaultLibCheck: true,
        inlineSourceMap: true,
    },
};
class InitCommand {
    constructor() {
        this.description = 'Init egg-ts-helper in your existing project';
        this.options = '<type>';
    }
    async run(_, { args, cwd }) {
        let type = args[1];
        const pkgInfo = utils.getPkgInfo(cwd);
        const jsconfigPath = path_1.default.resolve(cwd, './jsconfig.json');
        const jsConfigExist = fs_1.default.existsSync(jsconfigPath);
        const typeList = [TYPE_TS, TYPE_JS];
        pkgInfo.egg = pkgInfo.egg || {};
        // verify type
        if (!typeList.includes(type)) {
            const result = await enquirer_1.prompt({
                type: 'autocomplete',
                name: 'type',
                message: 'Choose the type of your project',
                choices: jsConfigExist ? typeList.reverse() : typeList,
            }).catch(() => {
                utils.log('cancel initialization');
                return { type: '' };
            });
            type = result.type;
        }
        if (type === TYPE_JS) {
            // create jsconfig.json
            if (!jsConfigExist) {
                utils.log('create ' + jsconfigPath);
                fs_1.default.writeFileSync(jsconfigPath, JSON.stringify(JS_CONFIG, null, 2));
            }
        }
        else if (type === TYPE_TS) {
            pkgInfo.egg.typescript = true;
            // create tsconfig.json
            const tsconfigPath = path_1.default.resolve(cwd, './tsconfig.json');
            if (!fs_1.default.existsSync(tsconfigPath)) {
                utils.log('create ' + tsconfigPath);
                fs_1.default.writeFileSync(tsconfigPath, JSON.stringify(TS_CONFIG, null, 2));
            }
        }
        else {
            return;
        }
        // add egg-ts-helper/register to egg.require
        pkgInfo.egg.require = pkgInfo.egg.require || [];
        if (!pkgInfo.egg.require.includes('egg-ts-helper/register')) {
            pkgInfo.egg.require.push('egg-ts-helper/register');
        }
        // write package.json
        const pkgDist = path_1.default.resolve(cwd, './package.json');
        fs_1.default.writeFileSync(pkgDist, JSON.stringify(pkgInfo, null, 2));
        utils.log('change ' + pkgDist);
        // build once
        utils.log('create d.ts ...');
        __1.createTsHelperInstance({ cwd }).build();
        utils.log('complete initialization');
    }
}
exports.default = new InitCommand();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5pdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jbWQvaW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx1Q0FBa0M7QUFDbEMsd0RBQWtDO0FBQ2xDLHdEQUF3QjtBQUN4QixvREFBb0I7QUFDcEIsMkJBQTZDO0FBRTdDLE1BQU0sT0FBTyxHQUFHLFlBQVksQ0FBQztBQUM3QixNQUFNLE9BQU8sR0FBRyxZQUFZLENBQUM7QUFDN0IsTUFBTSxTQUFTLEdBQUc7SUFDaEIsT0FBTyxFQUFFLENBQUUsTUFBTSxDQUFFO0lBQ25CLE9BQU8sRUFBRTtRQUNQLGVBQWU7UUFDZixVQUFVO1FBQ1YsV0FBVztRQUNYLFNBQVM7UUFDVCxZQUFZO1FBQ1osV0FBVztRQUNYLE9BQU87S0FDUjtDQUNGLENBQUM7QUFDRixNQUFNLFNBQVMsR0FBRztJQUNoQixlQUFlLEVBQUU7UUFDZixNQUFNLEVBQUUsUUFBUTtRQUNoQixNQUFNLEVBQUUsVUFBVTtRQUNsQixNQUFNLEVBQUUsSUFBSTtRQUNaLGFBQWEsRUFBRSxLQUFLO1FBQ3BCLHNCQUFzQixFQUFFLElBQUk7UUFDNUIscUJBQXFCLEVBQUUsSUFBSTtRQUMzQiw0QkFBNEIsRUFBRSxJQUFJO1FBQ2xDLE9BQU8sRUFBRSxNQUFNO1FBQ2YsT0FBTyxFQUFFLEtBQUs7UUFDZCxNQUFNLEVBQUUsSUFBSTtRQUNaLEdBQUcsRUFBRSxDQUFFLEtBQUssQ0FBRTtRQUNkLGFBQWEsRUFBRSxLQUFLO1FBQ3BCLGNBQWMsRUFBRSxJQUFJO1FBQ3BCLGtCQUFrQixFQUFFLElBQUk7UUFDeEIsb0JBQW9CLEVBQUUsS0FBSztRQUMzQixpQkFBaUIsRUFBRSxLQUFLO1FBQ3hCLDRCQUE0QixFQUFFLEtBQUs7UUFDbkMsMEJBQTBCLEVBQUUsSUFBSTtRQUNoQyxZQUFZLEVBQUUsSUFBSTtRQUNsQixtQkFBbUIsRUFBRSxJQUFJO1FBQ3pCLGVBQWUsRUFBRSxJQUFJO0tBQ3RCO0NBQ0YsQ0FBQztBQUVGLE1BQU0sV0FBVztJQUFqQjtRQUNFLGdCQUFXLEdBQUcsNkNBQTZDLENBQUM7UUFFNUQsWUFBTyxHQUFHLFFBQVEsQ0FBQztJQThEckIsQ0FBQztJQTVEQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxHQUFHLEVBQW9CO1FBQzFDLElBQUksSUFBSSxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNuQixNQUFNLE9BQU8sR0FBRyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3RDLE1BQU0sWUFBWSxHQUFHLGNBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDMUQsTUFBTSxhQUFhLEdBQUcsWUFBRSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUNsRCxNQUFNLFFBQVEsR0FBRyxDQUFFLE9BQU8sRUFBRSxPQUFPLENBQUUsQ0FBQztRQUV0QyxPQUFPLENBQUMsR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLElBQUksRUFBRSxDQUFDO1FBRWhDLGNBQWM7UUFDZCxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM1QixNQUFNLE1BQU0sR0FBRyxNQUFNLGlCQUFNLENBQW1CO2dCQUM1QyxJQUFJLEVBQUUsY0FBYztnQkFDcEIsSUFBSSxFQUFFLE1BQU07Z0JBQ1osT0FBTyxFQUFFLGlDQUFpQztnQkFDMUMsT0FBTyxFQUFFLGFBQWEsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRO2FBQ3ZELENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBRyxFQUFFO2dCQUNaLEtBQUssQ0FBQyxHQUFHLENBQUMsdUJBQXVCLENBQUMsQ0FBQztnQkFDbkMsT0FBTyxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQztZQUN0QixDQUFDLENBQUMsQ0FBQztZQUVILElBQUksR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDO1NBQ3BCO1FBRUQsSUFBSSxJQUFJLEtBQUssT0FBTyxFQUFFO1lBQ3BCLHVCQUF1QjtZQUN2QixJQUFJLENBQUMsYUFBYSxFQUFFO2dCQUNsQixLQUFLLENBQUMsR0FBRyxDQUFDLFNBQVMsR0FBRyxZQUFZLENBQUMsQ0FBQztnQkFDcEMsWUFBRSxDQUFDLGFBQWEsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLFNBQVMsQ0FBQyxTQUFTLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDcEU7U0FFRjthQUFNLElBQUksSUFBSSxLQUFLLE9BQU8sRUFBRTtZQUMzQixPQUFPLENBQUMsR0FBRyxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7WUFFOUIsdUJBQXVCO1lBQ3ZCLE1BQU0sWUFBWSxHQUFHLGNBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxFQUFFLGlCQUFpQixDQUFDLENBQUM7WUFDMUQsSUFBSSxDQUFDLFlBQUUsQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFDLEVBQUU7Z0JBQ2hDLEtBQUssQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLFlBQVksQ0FBQyxDQUFDO2dCQUNwQyxZQUFFLENBQUMsYUFBYSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUNwRTtTQUNGO2FBQU07WUFDTCxPQUFPO1NBQ1I7UUFFRCw0Q0FBNEM7UUFDNUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLElBQUksRUFBRSxDQUFDO1FBQ2hELElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsd0JBQXdCLENBQUMsRUFBRTtZQUMzRCxPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsd0JBQXdCLENBQUMsQ0FBQztTQUNwRDtRQUVELHFCQUFxQjtRQUNyQixNQUFNLE9BQU8sR0FBRyxjQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO1FBQ3BELFlBQUUsQ0FBQyxhQUFhLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzVELEtBQUssQ0FBQyxHQUFHLENBQUMsU0FBUyxHQUFHLE9BQU8sQ0FBQyxDQUFDO1FBRS9CLGFBQWE7UUFDYixLQUFLLENBQUMsR0FBRyxDQUFDLGlCQUFpQixDQUFDLENBQUM7UUFDN0IsMEJBQXNCLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ3hDLEtBQUssQ0FBQyxHQUFHLENBQUMseUJBQXlCLENBQUMsQ0FBQztJQUN2QyxDQUFDO0NBQ0Y7QUFFRCxrQkFBZSxJQUFJLFdBQVcsRUFBRSxDQUFDIn0=